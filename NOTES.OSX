Note on porting to OSX:

Using with XCode
================

In order to get the Renaissance menus to work from Xcode,  you may have
to replace the call to NSApplicationMain with
	[NSApplication sharedApplication];
	[NSApp run];. 
NSApplicationMain, which is used in all of GNUstep's tutorials and examples, 
also attempts to load the nib, and either fails because the nib is not present 
or overrides the Renaissance menus if it is. The replacement code also works 
fine when building the project with make.

One must also turn off Zero Link in order to build with Renaissance

#include
========

On GNUstep, we always use #include, and the headers try to #include
only the minimum number of headers needed to compile.  The actual
source code uses precompiled headers, so it always include everything
we may eventually need.

On OSX, Objective-C headers are not protected against multiple
inclusions.  This is a bug in the OSX headers.  Neverthless,
Foundation/Foundation.h and AppKit/AppKit.h can be #included on OSX
(because they just #import other headers).  That is actually
recommended, since those headers are precompiled.  So, on OSX we
always #include <Foundation/Foundation.h> and #include
<AppKit/AppKit.h>

The typical #include pattern in Renaissance headers is then

#ifndef GNUSTEP
# include <Foundation/Foundation.h>
# include <AppKit/AppKit.h>
#else
# include <Foundation/NSDebug.h>
# include <Foundation/NSString.h>
# include <AppKit/NSButton.h>
#endif

In source files instead we just include everything and turn
precompiled headers on.

GNUmakefiles vs XCode
==============================

Keeping the Apple Mac OS X port working while working
on Renaissance under GNU/Linux proves difficult, since
XCode is not available on GNU/Linux, and so I couldn't update
the Apple OSX port from GNU/Linux, and the files to build under Apple
OSX would soon go out of sync.

In short, keeping two separate build systems is a losing strategy,
particularly when one of the two is a proprietary unportable build
system.

So, I ported gnustep-make on Apple Mac OS X, and use gnustep-make on
both systems to build, which works very well.  Please note that you
don't need gnustep-make to actually use Renaissance, only to compile
it.
